name: 'Terraform CI/CD'

on:
  push:
    branches:
      - '**' # Trigger on pushes to all branches
    paths:
      - 'terraform/**.tf'
      - 'terraform/**.tfvars'

jobs:
  plan:
    name: 'Terraform Plan'
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'

      - name: 'Create Backend Config'
        working-directory: ./terraform/oci
        run: |
          cat > backend.conf <<EOF
          bucket                      = "${{ secrets.TF_STATE_BUCKET }}"
          key                         = "oci/terraform.tfstate"
          region                      = "${{ vars.TF_STATE_REGION }}"
          endpoint                    = "https://${{ secrets.TF_STATE_NAMESPACE }}.compat.objectstorage.${{ vars.TF_STATE_REGION }}.oraclecloud.com"
          skip_region_validation      = true
          skip_credentials_validation = true
          skip_metadata_api_check     = true
          force_path_style            = true
          EOF

      - name: 'Terraform Init'
        working-directory: ./terraform/oci
        run: terraform init -backend-config=backend.conf

      - name: 'Terraform Plan'
        working-directory: ./terraform/oci
        run: terraform plan -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -no-color

  apply:
    name: 'Terraform Apply'
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'

      - name: 'Create Backend Config'
        working-directory: ./terraform/oci
        run: |
          cat > backend.conf <<EOF
          bucket                      = "${{ secrets.TF_STATE_BUCKET }}"
          key                         = "oci/terraform.tfstate"
          region                      = "${{ vars.TF_STATE_REGION }}"
          endpoint                    = "https://${{ secrets.TF_STATE_NAMESPACE }}.compat.objectstorage.${{ vars.TF_STATE_REGION }}.oraclecloud.com"
          skip_region_validation      = true
          skip_credentials_validation = true
          skip_metadata_api_check     = true
          force_path_style            = true
          EOF

      - name: 'Terraform Init'
        working-directory: ./terraform/oci
        run: terraform init -backend-config=backend.conf

      - name: 'Terraform Apply'
        working-directory: ./terraform/oci
        run: terraform apply -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -no-color